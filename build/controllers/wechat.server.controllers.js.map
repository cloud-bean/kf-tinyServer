{"version":3,"sources":["../../src/controllers/wechat.server.controllers.js"],"names":["handleText","message","req","res","next","reply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAC3C;AACA;AACA;AACAD,MAAIE,KAAJ,CAAU,OAAV;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGAC,OAAOC,OAAP,GAAiB;AACfP;AADe,CAAjB","file":"wechat.server.controllers.js","sourcesContent":["// const userHelper = require('../helper/userHelper.server');\n// const coreLogic = require('../logic/coreLogic.server');\n// const keepLogic = require('../logic/keepLogic.server');\n// const co = require('co');\n// const config = require('../config/config');\n// const MESSAGE = require('../config/message');\n\n// // 处理单击按钮事件\n// function handleEventClick(message, req, res, next) {\n//   switch (message.EventKey) {\n//     case 'GET_HELP':\n//       coreLogic.sendHelpMessage(message, req, res, next);\n//       break;\n//     case 'GET_TASK_EASY':\n//     case 'GET_TASK_NORMAL':\n//     case 'GET_TASK_HARD':\n//       coreLogic.sendTask(message, req, res, next);\n//       break;\n//     case 'GET_RANK':\n//       res.reply('获取排行榜啦啦');\n//       break;\n//     default:\n//       res.reply('没匹配上啦啦');\n//   }\n// }\nfunction handleText(message, req, res, next) {\n  // wechatAPI.sendText(message.FromUserName, 'Hello world', (err, result) => {\n  //   console.log(result);\n  // });\n  res.reply('hello');\n}\n\n// function handleEvent(message, req, res, next) {\n//   switch (message.Event) {\n//     case 'CLICK':\n//       handleEventClick(message, req, res, next);\n//       break;\n//     case 'subscribe':\n//       userHelper.getUserInfoByOpenId(message.FromUserName);\n//       break;\n//     default:\n//       res.reply('没匹配上啦啦');\n//   }\n// }\n\n// function handleVoice(message, req, res, next) {\n//   co(function* () {\n//     try {\n//       const user = yield userHelper.getUserInfoByOpenId(message.FromUserName);\n//       const { iskeeped, iscontinue, status } = yield keepLogic.isKeeped(user);\n//       if (iskeeped && (status === 'complete')) {\n//         res.reply(MESSAGE.alreadyGetGrit);\n//       } else if (iskeeped && (status === 'pending')) {\n//         coreLogic.receiveAnswer(user);\n//         res.reply(MESSAGE.dupReceiveAnswer);\n//       } else {\n//         coreLogic.receiveAnswer(user);\n//         res.reply(MESSAGE.receiveAnswer);\n//         setTimeout(() => { coreLogic.sendGritcard(user, iscontinue); }, config.logic.delayTime);// 暂时设置为10分钟\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   });\n// }\n\n// function handleImage(message, req, res, next) {\n// }\n\n\nmodule.exports = {\n  handleText,\n};\n"]}