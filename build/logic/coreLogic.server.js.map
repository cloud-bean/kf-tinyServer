{"version":3,"sources":["../../src/logic/coreLogic.server.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"coreLogic.server.js","sourcesContent":["// const moment = require('moment');\n// const mongoose = require('mongoose');\n// const co = require('co');\n// const wechatAPI = require('../config/wechatAPI').api;\n\n// const userHelper = require('../helper/userHelper.server');\n// const keeprecordHelper = require('../helper/keeprecordHelper.server');\n// const taskHelper = require('../helper/taskHelper.server');\n// const imgHelper = require('../helper/imgHelper.server');\n// const cardHelper = require('../helper/cardHelper.server');\n\n// const KeepRecord = mongoose.model('KeepRecord');\n\n// const keepLogic = require('./keepLogic.server');\n// // 接收用户回复答案后生成 keeprecord 并将状态置为pending\n// function receiveAnswer(user) {\n//   keeprecordHelper\n//   .getNewestKeeprecord(user)\n//   .then((keeprecord) => {\n//     if (keeprecord === null) {\n//       const keepRecord = new KeepRecord({ user: user._id });\n//       keepRecord.save((err, result) => {\n//         if (err) console.log(err);\n//       });\n//       return;\n//     }\n//     const theday = moment(keeprecord.created);\n//     const iskeeped = theday.isSame(Date.now(), 'day');\n//     if (iskeeped) {\n//       keeprecord.created = Date.now();\n//       keeprecord.save();\n//     } else {\n//       const keepRecord = new KeepRecord({ user: user._id });\n//       keepRecord.save((err, result) => {\n//         if (err) console.log(err);\n//       });\n//     }\n//   }).catch((err) => {\n//     console.log(err);\n//   });\n// }\n\n// /*\n//  *点击领取任务按钮,获得相应等级的任务，若已完成当天任务则提示。\n//  *todo : 根据领取任务难度不同 发送不同难度的逻辑\n//  */\n// function sendTask(message, req, res, next) {\n//   co(function *() {\n//     try {\n//       const user = yield userHelper.getUserInfoByOpenId(message.FromUserName);\n//       const { iskeeped, iscontinue } = yield keepLogic.isKeeped(user);\n//       if (iskeeped) {\n//         res.reply('今日已获得Grit卡,请及时保存');\n//         const keeprecord = yield keeprecordHelper.getNewestKeeprecord(user);\n//         wechatAPI.sendImage(message.FromUserName, keeprecord.keep_card, (err, result) => {\n//         });\n//       } else {\n//         const task = yield taskHelper.getRandomTask(user.level);\n//         res.reply('领取任务成功，请阅读以下内容，语音回复至订阅号获取今日Grit卡');\n//         wechatAPI.sendText(message.FromUserName, task.content, (err, result) => {\n//         });\n//         wechatAPI.sendVoice(message.FromUserName, task.media_id, (err, result) => {\n//         });\n//       }\n//     } catch (err) {\n//       console.log(err);\n//       res.reply('系统出错，稍后尝试！')\n//     }\n//   });\n// }\n\n// // 延迟回复生成的grit卡\n// function sendGritcard(user, iscontinue) {\n//   co(function* () {\n//     try {\n//       const keepuser = yield keepLogic.keepAday(user, iscontinue);\n//       const background = yield cardHelper.getRandomCard(user.level);\n//       const file = yield imgHelper.combineKeepCard(keepuser, background.filepath);\n//       const mediaId = yield imgHelper.uploadImg(file);\n//       yield keeprecordHelper.saveGritcardID(user, mediaId);\n//       wechatAPI.sendText(user.openid, `审核通过，${user.nickname}已于${moment().format('HH:mm:ss')}打卡成功！请及时保存您的Grit卡，加油！`, (err, result) => {\n//       });\n//       wechatAPI.sendImage(user.openid, mediaId, (err, result) => {\n//       });\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   });\n// }\n\n// //\n\n// // 回复帮助信息\n// // todo 改为回复媒体消息或者进入网页\n// function sendHelpMessage(message, req, res, next) {\n//   co(function *(){\n//     try {\n//       const [media1, media2] = yield [imgHelper.uploadImgNotDel('material/GHS1.png'),imgHelper.uploadImgNotDel('material/GHS2.png')];\n//       res.reply({\n//         type: 'image',\n//         content: {\n//           mediaId: media1,\n//         },\n//       });\n//       wechatAPI.sendImage(message.FromUserName, media2, (err, result) => {\n//       });\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   });\n// }\n\n// module.exports = {\n//   sendTask,\n//   receiveAnswer,\n//   sendGritcard,\n//   sendHelpMessage,\n// };\n"]}